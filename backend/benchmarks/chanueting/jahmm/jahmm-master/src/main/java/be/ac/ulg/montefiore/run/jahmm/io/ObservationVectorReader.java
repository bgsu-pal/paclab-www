/*
 * Copyright (c) 2004-2009, Jean-Marc Fran√ßois. All Rights Reserved.
 * Licensed under the New BSD license.  See the LICENSE file.
 */

package be.ac.ulg.montefiore.run.jahmm.io;

import java.io.IOException;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.List;


/**
 * Reads an {@link be.ac.ulg.montefiore.run.jahmm.ObservationVector
 * ObservationVector} up to (and including) a semi-colon.
 * <p>
 * The format of this observation is an opening bracket (<tt>[</tt>) followed
 * by the components of the vector separated by spaces or tabs.  Each
 * component is a number (following the format
 * [+-]?[0123456789]+[.]?[0123456789]*).
 * <p>
 * For example, reading
 * <pre>[76 45. -2.23];</pre>
 * creates an observation such as the one generated by
 * <code>new ObservationVector(new double[] {76., 45., -2.23});</code>
 */
public class ObservationVectorReader
{
	private int dimension;
	
	
	/**
	 * Constructs a reader of {@link ObservationVector ObservationVector}.
	 */
	public ObservationVectorReader()
	{
		dimension = -1;
	}
	
	
	/**
	 * Constructs a reader of {@link ObservationVector ObservationVector}.
	 * Verifies the dimension of the observations read.
	 *
	 * @param dimension The dimension of each observation.
	 */
	public ObservationVectorReader(int dimension)
	{
		if (dimension <= 0)
			throw new IllegalArgumentException("Argument must be strictly " +
			"positive");
		
		this.dimension = dimension;
	}
}
